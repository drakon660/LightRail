//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightRail.WcfClient
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Input", Namespace="http://schemas.datacontract.org/2004/07/Interstate.SoapTestService")]
    public partial class Input : object
    {
        
        private int IdField;
        
        private string QueryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query
        {
            get
            {
                return this.QueryField;
            }
            set
            {
                this.QueryField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexInput", Namespace="http://schemas.datacontract.org/2004/07/Interstate.SoapTestService")]
    public partial class ComplexInput : object
    {
        
        private int IdField;
        
        private LightRail.WcfClient.ComplexQuery QueryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LightRail.WcfClient.ComplexQuery Query
        {
            get
            {
                return this.QueryField;
            }
            set
            {
                this.QueryField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexQuery", Namespace="http://schemas.datacontract.org/2004/07/Interstate.SoapTestService")]
    public partial class ComplexQuery : object
    {
        
        private int FromField;
        
        private int SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int From
        {
            get
            {
                return this.FromField;
            }
            set
            {
                this.FromField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LightRail.WcfClient.INothingInputService")]
    public interface INothingInputService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INothingInputService/GetValues", ReplyAction="http://tempuri.org/INothingInputService/GetValuesResponse")]
        System.Threading.Tasks.Task GetValuesAsync(LightRail.WcfClient.Input input, LightRail.WcfClient.ComplexInput complexInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INothingInputService/GetValues2", ReplyAction="http://tempuri.org/INothingInputService/GetValues2Response")]
        System.Threading.Tasks.Task GetValues2Async(string input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface INothingInputServiceChannel : LightRail.WcfClient.INothingInputService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class NothingInputServiceClient : System.ServiceModel.ClientBase<LightRail.WcfClient.INothingInputService>, LightRail.WcfClient.INothingInputService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NothingInputServiceClient() : 
                base(NothingInputServiceClient.GetDefaultBinding(), NothingInputServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_INothingInputService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NothingInputServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NothingInputServiceClient.GetBindingForEndpoint(endpointConfiguration), NothingInputServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NothingInputServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NothingInputServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NothingInputServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NothingInputServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NothingInputServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task GetValuesAsync(LightRail.WcfClient.Input input, LightRail.WcfClient.ComplexInput complexInput)
        {
            return base.Channel.GetValuesAsync(input, complexInput);
        }
        
        public System.Threading.Tasks.Task GetValues2Async(string input)
        {
            return base.Channel.GetValues2Async(input);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INothingInputService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INothingInputService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8667/sample-45830D75-D6F6-420F-B22F-D721E354C6A5.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NothingInputServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INothingInputService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NothingInputServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INothingInputService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_INothingInputService,
        }
    }
}
